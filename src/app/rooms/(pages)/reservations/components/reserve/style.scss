@use '@sass/config/vars' as v;
@use '@sass/utils/defs' as d;

.reserve {
  position: relative;

  &-container {
    z-index: 1;

    width: 330px;
    height: auto;
    margin: v.$padding * 0.3;
    margin-left: 25px;
    padding: v.$padding;
    border: 1.5px solid v.$tn1T;
    border-radius: v.$radius;

    background-color: v.$bg1;

    @include d.flex($ali: center, $gap: v.$padding * 2);
  }

  &-actions {
    @include d.flex;

    position: absolute;
    top: 50%;
    left: -0;
    transform: translateY(-50%);

    padding: v.$padding;
    border-top: 1.5px solid v.$tn1T;
    border-right: 1px solid v.$tn1T;
    border-bottom: 1.5px solid v.$tn1T;
    border-left: 4px solid v.$tn1T;
    border-radius: v.$radius * 2;

    background-color: v.$bg1;
  }

  &.active {
    .reserve-container,
    .reserve-actions {
      border: 2px solid v.$tn1;
    }
  }

  &-operations {
    display: grid;
    grid-template-columns: min-content 1fr 1fr;

    width: 100%;
    padding: 5px v.$padding;

    background-color: v.$bg2;
  }

  &-operation {
    text-align: center;

    @include d.flex($gap: 10px);

    h4 {
      border-bottom: 2.5px dotted v.$fn2;
      font-size: v.$fP;
    }

    h5 {
      font-weight: 900;
    }
  }

  &-action {
    border: none;

    &:hover {
      color: v.$tn1;
    }
  }

  &-littleBoxes {
    flex-wrap: wrap;
    justify-content: center;
    width: 100%;

    @include d.flex($gap: 10px, $dir: row, $ali: center);
  }

  &-date {
    justify-content: space-evenly;

    width: 100%;
    padding: v.$padding;
    border-radius: v.$radius;

    background-color: v.$bg2;

    @include d.flex($dir: row, $ali: center);

    h3 {
      @include d.flex($dir: row, $gap: 5px);

      b {
        color: v.$tn1;
      }

      span {
        font-size: v.$fSmall;
      }
    }
  }
}
