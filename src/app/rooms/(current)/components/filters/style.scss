@use '@sass/config/vars' as v;
@use '@sass/utils/defs' as d;
@use '@sass/utils/transitions' as t;

.roomFilters {
  height: auto;
  padding: v.$padding v.$padding * 0.8;
  border-radius: v.$radius;
  background-color: v.$bg1;

  @include d.flex($ali: flex-start);

  &-reset {
    color: v.$fn2;
    text-decoration: underline;
    background-color: transparent;
  }

  &-submit {
    font-weight: 700;
    color: v.$bg1;
    background-color: v.$tn1;
  }

  &-form {
    @include d.flex;

    width: 100%;
  }

  &-section {
    padding: v.$padding * 0.5;
    border: 1px solid transparent;
    border-radius: v.$radius;

    &.error {
      border-color: v.$danger_dark;
      background-color: rgba(v.$danger, 0.5);
    }

    &__error {
      color: v.$danger_dark;
    }

    &__option {
      @include d.flex($dir: row, $ali: center);

      padding: 0 v.$padding;
    }

    i {
      position: relative;

      display: block;

      width: 25px;
      height: 20px;
      border-radius: v.$radius;

      background: v.$bg2;

      &::before {
        content: '\27BB';

        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        scale: 0;

        font-size: v.$fP;
        font-style: normal;

        opacity: 0;

        transition: t.$pong;
      }
    }

    label {
      cursor: pointer;

      display: block;

      width: 100%;
      height: 100%;
      padding: v.$padding * 0.6;
    }

    input[type='radio'] {
      display: none;
      appearance: none;
    }

    input[type='radio']:checked {
      + i + label {
        color: v.$tn1;
      }

      + i {
        border: 1px solid v.$tn1;

        &::before {
          scale: 1;
          color: v.$tn1;
          opacity: 1;
        }
      }
    }
  }
}
